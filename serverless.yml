service: serverless-api-boilerplate

provider:
  name: aws
  stackName: serverless-api-boilerplate # Use a custom name for the CloudFormation stack
  apiName: serverless-api-gateway # Use a custom name for the API Gateway API
  runtime: nodejs8.10
  stage: ${env:STAGE}
  region: ${env:REGION}
  environment:
    JWT_SECRET: ${env:JWT_SECRET}
    DB: ${env:DB}
    DB_USER: ${env:DB_USER}
    DB_PASS: ${env:DB_PASS}
# package:
#   include:
#     - node_modules/**
#   individually: true

functions:
  verify-token:
    handler: dist/index.verify

  login:
    handler: dist/index.login
    # description:
    # memorySize: 128
    # runtime: nodejs8.10
    # timeout: 3
    # role:
    # package:
    #   include:
    #     - dist/controllers/user.js
    #     - dist/model/user.js
    #   individually: true
    events:
      - http:
          path: login
          method: post
          cors: true

  register:
    handler: dist/index.register
    events:
      - http:
          path: register
          method: post
          cors: true

  me:
    handler: dist/index.me
    events:
      - http:
          path: me
          method: get
          cors: true
          authorizer: verify-token

  getUsers:
    handler: dist/index.getUsers
    events:
      - http:
          path: users
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
